// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Annotation extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save Annotation entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save Annotation entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("Annotation", id.toString(), this);
  }

  static load(id: string): Annotation | null {
    return store.get("Annotation", id) as Annotation | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get cid(): string {
    let value = this.get("cid");
    return value.toString();
  }

  set cid(value: string) {
    this.set("cid", Value.fromString(value));
  }

  get ref(): string {
    let value = this.get("ref");
    return value.toString();
  }

  set ref(value: string) {
    this.set("ref", Value.fromString(value));
  }

  get batchCID(): string {
    let value = this.get("batchCID");
    return value.toString();
  }

  set batchCID(value: string) {
    this.set("batchCID", Value.fromString(value));
  }
}

export class AnnotationBatch extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save AnnotationBatch entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save AnnotationBatch entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("AnnotationBatch", id.toString(), this);
  }

  static load(id: string): AnnotationBatch | null {
    return store.get("AnnotationBatch", id) as AnnotationBatch | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get cid(): string {
    let value = this.get("cid");
    return value.toString();
  }

  set cid(value: string) {
    this.set("cid", Value.fromString(value));
  }
}
